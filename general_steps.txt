# General Steps
apt update && apt dist-upgrade
setup networks
add repos
install packages
apply configs
set root password for MySQL (mysql_secure_installation)
add the rabbit openstack user
  - rabbitmqctl add_user openstack RABBIT_PASS
give rabbit openstack user privileges
  - rabbitmqctl set_permissions openstack ".*" ".*" ".*"
Make sure to restart every service after editing their respective config files
When you install etcd you have to explicityly enable it before starting it
  - systemctl enable etcd


Keystone:
- Setup Databases
CREATE DATABASE keystone;
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' \
IDENTIFIED BY 'KEYSTONE_DBPASS';
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' \
IDENTIFIED BY 'KEYSTONE_DBPASS';
- Apply config file
- Populate database
su -s /bin/sh -c "keystone-manage db_sync" keystone
- Initialize Fernet key repositories
keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
keystone-manage credential_setup --keystone-user keystone --keystone-group keystone
- Bootstrap the Identity service
keystone-manage bootstrap --bootstrap-password ADMIN_PASS \
  --bootstrap-admin-url http://controller:5000/v3/ \
  --bootstrap-internal-url http://controller:5000/v3/ \
  --bootstrap-public-url http://controller:5000/v3/ \
  --bootstrap-region-id RegionOne
- Add lineinfile to /etc/apache2/apache2.conf
ServerName controller
- Restart Apache
service apache2 restart
- Create a projects, users, and roles
openstack project create --domain default \
  --description "Service Project" service
openstack project create --domain default \
  --description "Demo Project" myproject
openstack user create --domain default \
  --password-prompt myuser # The prompt will prompt for the password input
openstack role create myrole
openstack role add --project myproject --user myuser myrole


Glance:
- Setup Databases
CREATE DATABASE glance;
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' \
  IDENTIFIED BY 'GLANCE_DBPASS';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' \
  IDENTIFIED BY 'GLANCE_DBPASS';
- Create the glance user
openstack user create --domain default --password-prompt glance # The prompt will prompt for the password input
- Add the admin role to the glance user and service project
openstack role add --project service --user glance admin
- Create the glance service entity
openstack service create --name glance \
  --description "OpenStack Image" image
- Create the Image service API endpoints
openstack endpoint create --region RegionOne \
  image public http://controller:9292
openstack endpoint create --region RegionOne \
  image internal http://controller:9292
openstack endpoint create --region RegionOne \
  image admin http://controller:9292
- Populate the Image service database
su -s /bin/sh -c "glance-manage db_sync" glance
- Restart the Image services
service glance-registry restart
service glance-api restart


Controller Node:
- Setup Databases
CREATE DATABASE nova_api;
CREATE DATABASE nova;
CREATE DATABASE nova_cell0;
CREATE DATABASE placement;
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' \
  IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' \
  IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'%' \
  IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON placement.* TO 'placement'@'localhost' \
  IDENTIFIED BY 'PLACEMENT_DBPASS';
GRANT ALL PRIVILEGES ON placement.* TO 'placement'@'%' \
  IDENTIFIED BY 'PLACEMENT_DBPASS';
- Create the nova user
openstack user create --domain default --password-prompt nova # The prompt will prompt for the password input
- Add the admin role to the nova user
openstack role add --project service --user nova admin
- Create the nova service entity
openstack service create --name nova \
  --description "OpenStack Compute" compute
- Create the Compute API service endpoints
openstack endpoint create --region RegionOne \
  compute public http://controller:8774/v2.1
openstack endpoint create --region RegionOne \
  compute internal http://controller:8774/v2.1
openstack endpoint create --region RegionOne \
  compute admin http://controller:8774/v2.1
- Create a Placement service user using your chosen PLACEMENT_PASS
openstack user create --domain default --password-prompt placement # The prompt will prompt for the password input
- Add the Placement user to the service project with the admin role
openstack role add --project service --user placement admin
- Create the Placement API entry in the service catalog
openstack service create --name placement \
  --description "Placement API" placement
- Create the Placement API service endpoints
openstack endpoint create --region RegionOne \
  placement public http://controller:8778
openstack endpoint create --region RegionOne \
  placement internal http://controller:8778
openstack endpoint create --region RegionOne \
  placement admin http://controller:8778
- Populate the nova-api and placement databases
su -s /bin/sh -c "nova-manage api_db sync" nova
- Register the cell0 database
su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova
- Create the cell1 cell
su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova
- Populate the nova database
su -s /bin/sh -c "nova-manage db sync" nova
- Restart the Compute services
service nova-api restart
service nova-consoleauth restart
service nova-scheduler restart
service nova-conductor restart
service nova-novncproxy restart


Compute Node:
- Determine whether your compute node supports hardware acceleration for virtual machines
egrep -c '(vmx|svm)' /proc/cpuinfo
# If this command returns a value of one or greater, your compute
# node supports hardware acceleration which typically requires no additional configuration.
- Restart the Compute service
service nova-compute restart
- Discover compute hosts
su -s /bin/sh -c "nova-manage cell_v2 discover_hosts --verbose" nova



Neutron:
- Setup Databases
CREATE DATABASE neutron;
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' \
  IDENTIFIED BY 'NEUTRON_DBPASS';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' \
  IDENTIFIED BY 'NEUTRON_DBPASS';
- Create the neutron user
openstack user create --domain default --password-prompt neutron # The prompt will prompt for the password input
- Add the admin role to the neutron user
openstack role add --project service --user neutron admin
- Create the neutron service entity
openstack service create --name neutron \
  --description "OpenStack Networking" network
- Create the Networking service API endpoints
openstack endpoint create --region RegionOne \
  network public http://controller:9696
openstack endpoint create --region RegionOne \
  network internal http://controller:9696
openstack endpoint create --region RegionOne \
  network admin http://controller:9696
- Restart the Compute service
service nova-compute restart
- Restart the Linux bridge agent
service neutron-linuxbridge-agent restart
- Populate the database
su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \
  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron
- Restart the Compute API service
service nova-api restart
- Restart the Networking services
service neutron-server restart
service neutron-linuxbridge-agent restart
service neutron-dhcp-agent restart
service neutron-metadata-agent restart
service neutron-l3-agent restart


Horizon:
- Restart Apache after applying configs
service apache2 reload


Cinder:
- Setup Databases
CREATE DATABASE cinder;
GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'localhost' \
  IDENTIFIED BY 'CINDER_DBPASS';
GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'%' \
  IDENTIFIED BY 'CINDER_DBPASS';
- Create a cinder user
openstack user create --domain default --password-prompt cinder # The prompt will prompt for the password input
- Add the admin role to the cinder user
openstack role add --project service --user cinder admin
- Create the cinderv2 and cinderv3 service entities
openstack service create --name cinderv2 \
  --description "OpenStack Block Storage" volumev2
openstack service create --name cinderv3 \
  --description "OpenStack Block Storage" volumev3
- Create the Block Storage service API endpoints
openstack endpoint create --region RegionOne \
  volumev2 public http://controller:8776/v2/%\(project_id\)s
openstack endpoint create --region RegionOne \
  volumev2 internal http://controller:8776/v2/%\(project_id\)s
openstack endpoint create --region RegionOne \
  volumev2 admin http://controller:8776/v2/%\(project_id\)s
openstack endpoint create --region RegionOne \
  volumev3 public http://controller:8776/v3/%\(project_id\)s
openstack endpoint create --region RegionOne \
  volumev3 internal http://controller:8776/v3/%\(project_id\)s
openstack endpoint create --region RegionOne \
  volumev3 admin http://controller:8776/v3/%\(project_id\)s
- Populate the Block Storage database
su -s /bin/sh -c "cinder-manage db sync" cinder
- Restart the Compute API service
service nova-api restart
- Restart the Block Storage services
service cinder-scheduler restart
service apache2 restart
- Create the LVM physical volume
pvcreate /dev/nvme0n1p6
- Create the LVM volume group cinder-volumes
vgcreate cinder-volumes /dev/nvme0n1p6
- Restart the Block Storage volume service including its dependencies
service tgt restart
service cinder-volume restart


Setup networking for Admin tenant
